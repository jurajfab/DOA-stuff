HELM commands: 
helm version                # shows version 
helm search hub             # prehladava hub 
helm search repo            # prehladava repo   
helm search hub <package_name>      # hlada v hube zadany balicek 
helm search repo <package_name> --versions | grep "nginx "      # zobrazi verzie z repa a vyhlada tie s nazvom

helm repo list              # zobrazi zoznam repositarov 
helm repo add [NAME] [URL] [flags]
helm repo add bitnami https://charts.bitnami.com/bitnami        # prida repositar (URL z artifacthubu)
helm repo update                # aktualizuje repo, lokalne je k dispozicii 
helm repo remove <repo_name>    # zmaze repository 

helm show chart bitanmi/nginx      # zobrazi meta data balicka 
helm show readme bitnami/nginx      # zobrazi readme file balicka
helm show values bitnami/nginx      # zobrazi defualtnu konfiguraciu balicka 
helm show crds bitnami/nginx        # zobrazi vlastne k8s zdroje (custom resource definition objects)
helm show all bitnami/nginx         # ukaze vsetko naraz 

helm pull [chart URL | repo/chartname] [...] [flags]    # stiahne ale nenainstaluje balik vo formate .tgz
tar vtf <balicek>.tgz                       # vylistuje co obsahuje .tar file 
helm install [NAME] [CHART] [flags]
helm install www bitnami/nginx                          # nainstaluje balicek 
helm status www 
helm list           
    NAME            www
    NAMESPACE       default
    REVISION        1
    UPDATED         2024-10-17 10:45:45.724804844 +0200 CEST                                
    STATUS          deployed 
    CHART           nginx-18.2.3
    APP VERSION     1.27.2

helm get manifest <chart_name>      # zobrazi manifest z ktoreho vznikol balicek 
helm get manifest www               
helm uninstall www              # odinstaluje balicek 

UPGRADE: 
helm install www bitnami/nginx --version 13.0.0       # nainstaluje starsiu verziu 
helm upgrade www bitnami/nginx --version 13.1.3       # upgrade aktualnej verzie na novu verziu 
helm history www                                      # zobrazi historiu nasadeni 
helm rollback <RELEASE> [REVISION] [flags]            # ak nedam cislo revizie tak ide o jednu dozadu
helm rollback www 1                                   # rollback na zadanu reviziu         
helm upgrade www bitnami/nginx --set replicaCount=2         # zmena cez prikazovy riadok pomocou set prikazu 
helm upgrade www bitnami/nginx --values values.yaml         # upgrade pomocou config fileu 
helm upgrade www bitnami/nginx --set replicaCount=2 --values values.yaml    
    ---> najprv berie default hodnotu, potom config file a nakoniec cez set prikaz a to sa vykona 

# Nainstaluje package a vytvori aj namespace ak neexistuje 
helm install firstblood bitnami/nginx --namespace rambo --create-namespace --values values.yaml

LABAK WORDPRESS: 
helm install wordpress bitnami/wordpress --namespace wordpress --create-namespace

helm upgrade wordpress bitnami/wordpress --set mariadb.auth.rootPassword="secret"
helm upgrade wordpress bitnami/wordpress --values values.yaml

### HELM CREATION ### 
helm create <name> 

helm show chart .
helm show values .
helm package <path>          # vytvori balik 
helm install <name> <path>    # nainstaluje balicek bez toho aby som ho vytvoril 

echo "Created by (c)2024 Duri" >> templates/NOTES.txt       # vlozi nieco do NOTES.txt 
helm template <path>                                        # vezme values zo sablon a vysledny manifest zobrazi 
helm template . --show-only templates/service.yaml          # zobrazi len vysledny servis 
helm template <realese_name> . --show-only templates/service.yaml                       # viem mu dat aj release name 
helm template world . --show-only templates/service.yaml --set service.port=8000        # viem mu dohodit aj ine hodnoty
helm template world . --set ingress.enabled=True            # vlozi aj ingress 

helm lint <path>        # nespusta kod ale iba ho kontroluje a hlada problemy v kode (syntax a pod. )

### PACKAGE RAMBO CREATION ### 
1. vymazes vsetko a nechas len priecinok templates, Chart.yaml, .helmignore a pridas readme.md 
2. vytvoris readme.md a vlozis tam daco > figlet RAMBO > readme.md 
3. upravis Chart.yaml 
4. vytvoris deployment a service manifest v templates
5. vytvoris si NOTES.txt v templates priecinku, co je v NOTES sa zobrazi po nainstalovani chartu 
6. zmenis premenne v deploymente a service:
    .ReleaseName – nazov ktory zadavas pri installe  {{ .Release.Name }}-{{ .Chart.Name }}-{{ .Values.part }} 
	  .ChartName – je nazov definovany v Chart.yaml 
	  .Values.part – je hodnota vo file values.yaml
   {{ .Release.Name }}-{{ .Chart.Name }}-{{ .Values.part }} 
7. upravis si aj porty v service 
  {{ .Values.service.port / .targetPort }} 
8. {{ .Values.service.type | default "LoadBalancer" }} - ak tam pri spustani nedam nic tak vezme default hodnotu ktorou bude LoadBalancer, ak nepouzijem set na service.type tak pouzije default hodnotu z values.yaml

realese_name = nazov instalacie 
helm template rambo . --show-only templates/service.yaml --set service.port=10000 --set service.targetPort=9000

helm create starter(meno ake chcem)              # vytvorim si sablonu pre sablonu :) 
helm create balicek --starter $(pwd)/starter/	 # spusti moju predvolenu sablonu ktoru som si predtym vytvoril 

### UMBRELLA CHART ### 
- pomocou subchartov 
helm create umbrella-chart          # vytvorim umbrella chart 
Vojdem do priecinka charts a tam vytvorim dalsie charty: 
helm create frontend
helm create backend
helm create database 
helm install umbrella umbrella-chart/   # nainstaluje vsetko 
helm upgrade umbrella umbrella-chart --set frontend.replicaCount=3      # zmeni repliky ale iba pre frontend

- pomocou dependencie na existujuci chart 
v Charts.yaml doplnim dependencies 
helm dependency list
helm dependancy update .        # stiahne dependencies 
helm install wp .               # nainstaluje balicky 

## VYTVORENIE REPOZITARA ## 
helm repo index charts/	        # vytovori index.yaml = repozitar
helm repo index <z coho>
python -m http.server --directory . 8080         # zapne webovy server nad priecinok v ktorom som

helm repo add <repo_name> <URL>
helm repo add duri http://localhost:8080/

## PLUGINS ## 
helm plugin list        # zobrazi nainstalovane pluginy 
helm plugin install https://github.com/databus23/helm-diff      # nainstaluje plugin 
helm install www bitnami/nginx --version 13.0.0             # nainstalujem nizsiu verziu 
helm diff upgrade www bitnami/nginx --version 14.0.0        # diff ukaze zmeny oproti verziam ale nenainstaluje
helm diff revision www 1 2              # vie porovnavat aj revizie 
helm plugin uninstall diff              # odinstaluje plugin 

helm plugin install https://github.com/komodorio/helm-dashboard.git
helm dashboard --port 8000 --bind 0.0.0.0           # pusti na porte 8000 od hocikadial
